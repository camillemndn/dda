---
title: Testing the equality of mean densities of temperature in Vietnam
vignette: >
  %\VignetteIndexEntry{Testing the equality of mean densities of temperature in Vietnam}
  %\VignetteEngine{quarto::html}
  %\VignetteEncoding{UTF-8}
lightbox: true
toc: true
number-sections: true
df-print: kable
---

```{r knitr_opts, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  dpi = 300,
  fig.height = 10,
  fig.width = 15,
  fig.ext = "jpg",
  dev = "jpeg",
  dev.args = list(bg = "white")
)

library(ggplot2)
theme_set(theme_minimal(base_size = 18))
theme_legend_inside <- theme(
  legend.position = "inside",
  legend.position.inside = c(.05, .95),
  legend.justification = c("left", "top"),
  legend.box.just = "left",
  legend.margin = margin(6, 6, 6, 6)
)

library(kableExtra)

stars_pval <- function(x) {
  stars <- c("***", "**", "*", NULL)
  var <- c(0, 0.01, 0.05, 0.10, 1)
  i <- findInterval(as.numeric(x), var, left.open = T, rightmost.closed = T)
  paste(as.character(x), ifelse(is.na(stars[i]), "", stars[i]))
}

kable_format <- function(tbl) {
  mutate(tbl, across(
    where(is.numeric),
    function(x) {
      sapply(
        x,
        function(x) format(signif(x, 2), scientific = x < 0.1) |> stars_pval()
      )
    }
  ))
}

kable_source <- function(tbl) {
  cat("```tex\n")

  kable_format(tbl) |>
    kbl(format = "latex", booktabs = TRUE) |>
    kable_styling(latex_options = "striped") |>
    print()

  cat("```\n")
  cat("\n\n")
}
```

```{r setup, message = FALSE}
library(dda)
library(fda.usc)
library(fdANOVA)
library(MVN)
library(tidyverse)
library(boot)
library(sf)
set.seed(10983)
```


# Preprocessing into density data

```{r fig-preprocessing_hist}
#| fig-cap: Density of maximum temperature per province.

data(vietnam_temperature_dd)
data(vietnam_regions)
data(vietnam_provinces)

to_trend <- function(ddobj, t = seq_len(ncol(ddobj$coefs))) {
  ddobj$coefs <- lm(t(ddobj$coefs) ~ t)$coefficients["t", ]
  dd(clr = fd(ddobj$coefs, ddobj$basis))
}

vnt <- vietnam_temperature_dd |>
  group_by(region, province) |>
  summarise(t_max = list(c(t_max)), .groups = "drop") |>
  mutate(t_max = lapply(t_max, to_trend)) |>
  left_join(vietnam_regions, by = c("region" = "code")) |>
  rename(region_name = name) |>
  arrange(region, province)
class(vnt$t_max) <- c("ddl", "fdl", "list")

vnt |> plot_funs(t_max, color = region_name) +
  facet_grid(vars(str_wrap(region_name, 14)), scales = "free_y") +
  theme(legend.position = "none", axis.title.y = element_text(angle = -90)) +
  geom_hline(yintercept = 1 / diff(vnt$t_max[[1]]$basis$rangeval), linetype = "dotted") +
  labs(
    x = "Temperature (deg. Celsius)",
    y = "Density",
    color = "Region"
  )

vnt |> plot_funs(t_max, color = region_name) +
  theme_legend_inside +
  labs(
    x = "Temperature (deg. Celsius)",
    y = "Density",
    color = "Region"
  )
```

```{r fig-mean_trend}
#| fig-cap:
#|  - Mean annual trend of the maximum temperature distributions between 1987 and 2016.
#|  - Centered log-ratio transform of the mean annual trend of maximum temperature distributions between 1987 and 2016.

vnt |>
  pull(t_max) |>
  mean() |>
  plot() +
  geom_hline(yintercept = 1 / diff(vnt$t_max[[1]]$basis$rangeval), color = "red", linetype = "dotted") +
  labs(
    x = "Temperature (deg. Celsius)",
    y = "Density"
  )

vnt |>
  pull(t_max) |>
  mean() |>
  as.fd() |>
  plot() +
  labs(
    x = "Temperature (deg. Celsius)",
    y = "clr"
  )
```


# Exploratory analysis by region

```{r fig-regions_map}
#| fig-cap: Map of Vietnam by region.

vietnam_provinces |>
  left_join(vietnam_regions, by = c("region" = "code")) |>
  rename(region_name = name) |>
  ggplot(aes(fill = region_name)) +
  geom_sf() +
  scale_x_continuous(breaks = seq(from = -180, to = 180, by = 2)) +
  labs(x = "Longitude", y = "Latitude", fill = "Region")
```

```{r fig-regions_mean}
#| fig-cap: Mean trend density of maximum temperature per region.

vntr <- vnt |>
  select(!province) |>
  group_by(region_name) |>
  summarise(t_max = mean(t_max))

vntr |> plot_funs(t_max, color = region_name) +
  geom_hline(yintercept = 1 / diff(vnt$t_max[[1]]$basis$rangeval), linetype = "dotted") +
  geom_function(fun = function(x) eval(mean(c(vnt$t_max)), x), color = "black", linetype = "dotted", linewidth = 1) +
  theme_legend_inside +
  labs(
    x = "Temperature (deg. Celsius)",
    y = "Density",
    color = "Region"
  )

vntry <- vietnam_temperature_dd |>
  left_join(vietnam_regions, by = c("region" = "code")) |>
  rename(region_name = name) |>
  arrange(region, province) |>
  select(!province) |>
  group_by(region_name, year) |>
  summarise(t_max = mean(t_max))

vntry |> plot_funs(t_max, color = region_name, linewidth = year, alpha = year) +
  facet_grid(vars(str_wrap(region_name, 14)), scales = "free_y") +
  scale_linewidth(range = c(0.2, 2)) +
  theme_legend_inside +
  labs(
    x = "Temperature (deg. Celsius)",
    y = "Density",
    color = "Region"
  )
```

```{r lr_plots}
```


# Preliminary study

## Normality assumption

```{r normality}
vnt_pc <- pca.fd(c(vnt$t_max), nharm = 5)
pairs(vnt_pc$scores)
mvn(vnt_pc$scores, mvnTest = "mardia")
```


## Homogeneity of variances

```{r fig-variance_homogeneity}
#| fig-cap: Correlation function within the MDR region.

vnt_var <- var.fd(c(as.fd(vnt$t_max)))

tt <- seq(
  vnt_var$sbasis$rangeval[1],
  vnt_var$sbasis$rangeval[2],
  length.out = 401
)

z <- eval.bifd(tt, tt, vnt_var) # Covariance
z <- cor.fd(tt, c(as.fd(vnt$t_max))) # Correlation

df <- data.frame(
  x = rep(tt, each = length(tt)),
  y = rep(tt, times = length(tt)),
  z = as.vector(z)
)

ggplot(df, aes(x = x, y = y, z = z)) +
  geom_contour_filled() +
  labs(
    fill = "Correlation",
    x = "Temperature (deg. Celsius)", y = "Temperature (deg. Celsius)"
  )
```

# Global tests

## One-sample tests

## Distributional ANOVA

```{r tbl-danova_global}
#| warning: false

vnte <- vnt |>
  mutate(t_max = as.fd(t_max)) |>
  eval_funs(t_max, n = 1401) |>
  select(province, x, y) |>
  pivot_wider(names_from = province, values_from = y) |>
  column_to_rownames("x")

vnt_province_region <- vietnam_provinces$region
names(vnt_province_region) <- vietnam_provinces$province

plotFANOVA(vnte, vnt_province_region[colnames(vnte)], separately = TRUE)

stat_list <- list("GPF", "Fmaxb", "CS", "L2B", "FB")

res <- fanova.tests(vnte, vnt_province_region[colnames(vnte)],
  test = stat_list,
  params = list(
    paramCS = 100,
    paramFmaxb = 100,
    paramTRP = list(B.TRP = 100)
  )
)

res_tbl <- res[as_vector(stat_list)] |>
  sapply(function(x) c(`Statistic` = x$stat, `p-value` = x$pval)) |>
  t() |>
  as.data.frame() |>
  rownames_to_column("Name")

kable_format(res_tbl)
```

```{r danova_global_tex}
#| echo: false
#| output: asis
kable_source(res_tbl)
```

## Pairwise comparisons

```{r tbl-danova_pairwise}
vntp <- t(combn(c("NMM", "RRD", "NCC", "CHR", "SR", "MDR"), m = 2))
colnames(vntp) <- c("region1", "region2")

pairwise_anova <- function(region1, region2) {
  data <- vnte[vnt_province_region[colnames(vnte)] %in% c(region1, region2)]

  res <- fanova.tests(data, vnt_province_region[colnames(data)],
    test = stat_list,
    params = list(
      paramCS = 100,
      paramFmaxb = 100,
      paramTRP = list(B.TRP = 100)
    )
  )

  res[as_vector(stat_list)] |>
    sapply(function(x) c(x$pval)) |> c()
}

multiple_testing <- function(tbl, m) {
  mutate(tbl, across(where(is.numeric), ~ 1 - (1- .x)^m))
}

res_tbl <- as_tibble(vntp) |>
  rowwise() |>
  mutate(res = map2(region1, region2, pairwise_anova)) |>
  unnest_wider(res)

kable_format(res_tbl)
```

```{r danova_pairwise_tex}
#| echo: false
#| output: asis
kable_source(res_tbl)
```

```{r danova_pairwise_adj_tex}
#| echo: false
#| output: asis
kable_source(res_tbl |> multiple_testing(m = nrow(res_tbl)))
```

# Interval-wise interpretation 

## One-sample tests

## Distributional ANOVA

## Two-sample tests
