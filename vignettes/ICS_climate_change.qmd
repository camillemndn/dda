---
title: ICS and climate change in Vietnam
vignette: >
  %\VignetteIndexEntry{ICS and climate change in Vietnam}
  %\VignetteEngine{quarto::html}
  %\VignetteEncoding{UTF-8}
lightbox: true
toc: true
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  dpi = 300,
  fig.height = 10,
  fig.width = 15,
  fig.ext = "jpg",
  dev = "jpeg",
  dev.args = list(bg = "white")
)
```

```{r setup, message = FALSE}
library(dda)
library(tidyverse)
library(sf)
set.seed(0)
```


# 10 periods, 26 provinces

We compute an average density per province per period of 3 years.
There are 10 periods total, and only 26 provinces in the two northern
regions of Vietnam, so 260 observations total.

```{r vnt_ten_periods}
data(vietnam_temperature)
data(vietnam_regions)

vietnam_temperature <- vietnam_temperature |>
  select(!t_min) |>
  mutate(period = as.factor(1 + (year - min(year)) %/% 3))

vnt <- vietnam_temperature |>
  filter(region %in% c("RRD", "NMM")) |>
  mutate(t_max = as_dd(t_max, lambda = 10, nbasis = 10, mc.cores = 15)) |>
  group_by(region, province, period) |>
  summarise(t_max = list(c(mean(t_max)))) |>
  ungroup() |>
  left_join(vietnam_regions, by = c("region" = "code")) |>
  rename(region_name = name) |>
  arrange(region, province, period)

class(vnt$t_max) <- c("ddl", "fdl", "list")

vnt |> plot_funs(t_max, color = province) +
  facet_wrap(vars(period))
```

```{r vnt_ten_periods_out}
icsout <- ICS_outlier(vnt$t_max, index = 1:4, n_cores = 14)

vnt <- vnt |>
  mutate(outlying = as.factor(icsout$outliers)) |>
  cbind(icsout$scores)

vnt |> plot_matrix(paste0("IC.", 1:4),
  label = period,
  color = ifelse(outlying == 1, province, "not outlying"),
  alpha = outlying
)

vnt |> plot_funs(t_max, color = ifelse(outlying == 1, province, "not outlying"), alpha = outlying) +
  facet_wrap(vars(period))
```

# 30 years, 1 climate region (13 provinces)

```{r climate_regions_map}
vietnam_provinces <- vietnam_provinces |>
  arrange(region, province) |>
  mutate(climate_region = case_when(
    province %in% c("LAICHAU", "DIENBIEN", "SONLA") ~ "S1",
    province %in% c(
      "LAOCAI", "YENBAI", "HAGIANG", "CAOBANG", "TUYENQUANG",
      "BACKAN", "THAINGUYEN", "LANGSON", "BACGIANG", "QUANGNINH"
    ) ~ "S2",
    region %in% c("NMM", "RRD") ~ "S3",
    .default = NA
  ))

vietnam_provinces |>
  filter(region %in% c("RRD", "NMM")) |>
  ggplot(aes(fill = climate_region, label = province)) +
  geom_sf() +
  geom_sf_label(fill = "white") +
  theme_minimal() +
  labs(x = "longitude", y = "latitude")
```

```{r climate_regions}
library(tidyverse)
library(sf)
data(vietnam_temperature)
data(vietnam_regions)
data(vietnam_provinces)

vntcr <- vietnam_temperature |>
  filter(region %in% c("RRD", "NMM")) |>
  dplyr::select(year, province, t_max) |>
  left_join(vietnam_provinces, by = "province") |>
  st_as_sf() |>
  dplyr::select(year, climate_region, province, t_max) |>
  filter(climate_region == "S3") |>
  arrange(year, province)

vnt <- vntcr |>
  mutate(t_max = as_dd(t_max, lambda = 10, nbasis = 10, mc.cores = 15))
class(vnt$t_max) <- c("ddl", "fdl", "list")

vnt |> plot_funs(t_max, color = province) +
  facet_wrap(vars(year))

icsout <- ICS_outlier(vnt$t_max, index = 1:2, n_cores = 14)
```

```{r climate_regions_screeplot}
icsout$result |> ggplot(aes(index, gen_kurtosis, group = 1)) +
  geom_line(alpha = 0.5) +
  geom_point(aes(color = selected, size = selected))
```

```{r climate_regions_outliers}
vnt <- vnt |>
  mutate(
    index = seq_len(nrow(icsout$scores)),
    outlying = as.factor(icsout$outliers),
    distances = icsout$ics_distances
  ) |>
  cbind(icsout$scores)

vnt |>
  mutate(province = ifelse(outlying == 1, province, "not outlying")) |>
  plot_funs(t_max, color = province, alpha = outlying) +
  labs(x = "temperature (deg. Celsius)", y = "density")

vnt |>
  mutate(
    t_max = as.fd(t_max),
    province = ifelse(outlying == 1, province, "not outlying")
  ) |>
  plot_funs(t_max, color = province, alpha = outlying) +
  labs(x = "temperature (deg. Celsius)", y = "clr(density)")

vnt |>
  mutate(province = ifelse(outlying == 1, province, "not outlying")) |>
  plot_funs(t_max, color = province, alpha = outlying) +
  facet_wrap(vars(year)) +
  labs(x = "temperature (deg. Celsius)", y = "density")

vnt |>
  mutate(
    t_max = as.fd(t_max),
    province = ifelse(outlying == 1, province, "not outlying")
  ) |>
  plot_funs(t_max, color = province, alpha = outlying) +
  facet_wrap(vars(year)) +
  labs(x = "temperature (deg. Celsius)", y = "clr(density)")
```

```{r climate_regions_distances}
vnt |> ggplot(aes(index, distances, color = province, label = year)) +
  geom_text()
```


```{r climate_regions_scatter}
vnt |>
  mutate(province = ifelse(outlying == 1, province, "not outlying")) |>
  ggplot(aes(IC.1, IC.2)) +
  geom_text(aes(color = province, label = year))
```

```{r climate_regions_eigendensities}
icsout$result |>
  filter(selected) |>
  plot_funs(H_dual, color = index) +
  labs(x = "temperature (deg. Celsius)", y = "density")
```

Now let us apply ICS for outlier detection on the same dataset
but with different smoothing parameters.

```{r climate_region_grid}
param_grid <- expand.grid(
  knots_pos = "quantiles",
  nknots = 5 * 1:5,
  lambda = 10^(-2:2)
)

smooth_ICS <- function(knots_pos, nknots, lambda) {
  vnts <- vntcr |>
    mutate(t_max = as_dd(t_max,
      lambda = lambda, nbasis = 5 + nknots,
      mc.cores = parallel::detectCores() - 1, knots_pos = knots_pos
    ))
  knots_pos_str <- ifelse(knots_pos == "quantiles",
    "Knots at quantiles", "Equally spaced knots"
  )
  print(paste(
    "# of knots:", nknots, "|",
    "log10(lambda):", log10(lambda), "|",
    knots_pos_str
  ))

  list(
    dd = vnts$t_max,
    ics = tryCatch(ICS(as.fd(vnts$t_max)), error = function(e) e),
    ics_out = tryCatch(ICS_outlier(as.fd(vnts$t_max),
      n_cores = parallel::detectCores() - 1, index = 1:2
    ), error = function(e) e)
  )
}

# Smooth and detect outliers for each parameter
system.time(
  ics_grid <- param_grid |>
    mutate(id = seq_len(n())) |>
    rowwise() |>
    mutate(res = list(smooth_ICS(knots_pos, nknots, lambda)))
)
save(ics_grid, file = "ICS_climate_change.RData")
```

```{r ics_grid_out_create, eval = FALSE}
load("ICS_climate_change.RData")

ics_out <- ics_grid |>
  rowwise() |>
  filter(!(any(class(res$ics_out) == "error"))) |>
  mutate(res = list(as.factor(res$ics_out$outliers))) |>
  rename(outliers = res) |>
  unnest_longer(outliers, indices_to = "obs_id")
save(ics_out, file = "ICS_climate_change.RData")

ics_out |> ggplot(aes(log10(lambda), obs_id, fill = outliers)) +
  geom_tile() +
  scale_fill_grey(start = 1, end = 0) +
  facet_grid(cols = vars(nknots), rows = vars(knots_pos))
```
If we force to 0 the first and last ZB-spline coordinates of the $\operatorname{clr}$,
we project them onto the space of splines contrained to $0$ on the
boundaries of the interval.

```{r zero_boundary}
boundary_to_zero <- function(x) {
  b <- x$basis
  p <- b$nbasis
  zbsp <- fd(to_zbsplines(inv = TRUE, coefs = diag(p - 1), basis = b), b)
  plot(zbsp)

  y <- to_zbsplines(x)
  y[c(1, p - 1), ] <- 0
  yfd <- fd(to_zbsplines(inv = TRUE, coefs = y, basis = b), b)

  list(dd = yfd, coefs = t(y[2:(p - 2), ]))
}
icsout <- ICS_outlier(boundary_to_zero(c(vnt$t_max))$coefs)

vnt |>
  mutate(
    t_max = as.list(as.fd(boundary_to_zero(c(t_max))$dd)),
    outlying = as.factor(icsout$outliers)
  ) |>
  plot_funs(t_max, color = outlying) +
  facet_wrap(vars(year))
```

